@model FakeNetBank.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        <h4>Checkings Account</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.AccountNumber)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AccountNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>


            <dt>
                @Html.DisplayNameFor(model => model.Balance)
            </dt>

            <dd class="balance">
                @Html.DisplayFor(model => model.Balance)
            </dd>

        </dl>
    </div>
</div>


<div class="row home-buttons">
    <div class="col-md-4 col-md-offset-2">
        <a href="@Url.Action("Withdraw", "Transaction", new { customerId = Model.Id })" class="btn btn-primary btn-block">Withdraw</a>
    </div>
    <div class="col-md-4">
        <a href="@Url.Action("Deposit", "Transaction", new { customerId =  Model.Id } )" class="btn btn-primary btn-block">Deposit</a>
    </div>
</div>

<table class="table table-bordered table-hover" id="transactions">
    <thead>
        <tr>
            <th>Amount</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>

    </tbody>

</table>

<div>
    @Html.ActionLink("Back to Homepage", "Index", "Home")
</div>

@section scripts{
    <script>


        $(document).ready(function () {
            var table = $('#transactions').DataTable({
                "scrollY": "200px",
                "scollCollapse": true,
                "bFilter": false,
                paging: false,
                order: [[1, "desc"]],
                ajax: {
                    url: "/api/transactions/" + @Model.Id,
                    dataSrc: "",
                },
                columns: [
                    {
                        data: "balance",
                        render: function (data, type, row){
                            return data < 0 ? "<span class='text-danger'>- $" + Math.abs(data) + "</span>" : "<span class='text-success'>+ $" + data + "</span>";
                        }
                    },
                    {
                        data: "createdOn",
                        render: function(data, type, transaction){
                            return data;
                        }
                    }
                ]
            });

            console.log(table);
        });
    </script>    
}